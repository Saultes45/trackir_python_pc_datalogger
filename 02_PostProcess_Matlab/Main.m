%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Read pose from track IR device with SDK (python)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Metadata
% Written by    : NathanaÃ«l Esnault
% Verified by   : N/A
% Creation date : 2021-10-08
% Version       : 0.1 (finished on ...)
% Modifications :
% Known bugs    :

%% Functions associated with this code :

%% Possible Improvements

%% Ressources
% github: https://github.com/johnflux/python_trackir
% track IR:
% --> To be used with the python code from github:
% E:\Documents\08_Github Local Repo\python_trackir\TrackIR_to_log_file.py
%     [OLD](in pycharm to have automatic log saving)

% python uses the SDK: from trackir import TrackIRDLL, (TrackIR_6DOF_Data,
% logprint)
% but you need to have the trackIR app running in // as well !!!!
% the python code is heavily based on John Tapsell's work 

% [OLD] To save to a log, 2 options
%--> Do that in python
%--> Follow the instructions from Pycharm to save console logs
%automatically: https://stackoverflow.com/questions/46410577/intellij-idea-how-persist-console-output-to-file-programmatically


%% TODO
% --> Detect frame dropouts with variance
% --> Save as quaternion
% --> Filter using LERP/SLERP as quaternion ^


% -->  Pop up selection of the file to import ^
% -->  File name check, get runID
% -->  Detect all the good (LOG) files in a folder ^



%% Initialisations

close all;
clc
clearvars;

set(0,'DefaultFigureWindowStyle','docked');
formatOut = 'yyyy-mm-dd--HH-MM-SS-FFF'; % not used yet
RunID = datestr(now,formatOut); % not used yet
occured_error = 0; % not used yet

%% Parameters

% inputFile = "E:\Documents\08_Github Local Repo\python_trackir\Data\2021-10-10--15-16-56\2021-10-10--15-16-56-Data.log"; % TODO, have apop up selection

% inputFile = "F:\Dropbox\51_MIMU Inertial Elements\03_Code from Inertial Elements\MIMU48XC\MIMU48XC-4844-Raw\2022-08-10--11-39-00-Data.log";
inputFile = "F:\Dropbox\51_MIMU Inertial Elements\03_Code from Inertial Elements\MIMU48XC\MIMU48XC-4844-Raw\2022-08-10--11-32-47-Data.log";

Do.ZeroAtStart          = 1; % not yet implemented
Do.SLERPsmoothing       = 0; % not yet implemented
Do.plotData             = 1;
Do.saveFigures          = 0;
Do.saveData             = 0;

SaveFiguresPath = 'fig';
saveFigureDPI = 1200;

%% Import data from text file
% Auto-generated by MATLAB on 10-Oct-2021 15:35:35

% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 9);

% Specify range and delimiter
opts.DataLines = [5, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["loggertimestamp", "timestamp", "framenum", "roll", "pitch", "yaw", "x", "y", "z"];
opts.VariableTypes = ["datetime", "double", "double", "double", "double", "double", "double", "double", "double"];


% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule    = "read";

% Specify variable properties
opts = setvaropts(opts, "loggertimestamp", "InputFormat", "yyyy-MM-dd_HH-mm-ss.SSS");
% web(fullfile(docroot, 'matlab/ref/datetime.html#mw_963bdeb5-a675-4457-af6a-4295e37d52cc'))
% yyyy-MM-dd--HH:mm:ss
% yyyy-MM-dd_HH-mm-ss.SSS
% 2021-10-10_15-16-57.564,1261,31834,-18.70774,20.56724,-6.83113,72.62368,7.97489,5.51922


% Import the data
tbl = readtable(inputFile, opts);

% Convert to output type
loggertimestamp = tbl.loggertimestamp;
timestamp   = tbl.timestamp;
framenum    = tbl.framenum;
roll        = tbl.roll;
pitch       = tbl.pitch;
yaw         = tbl.yaw;
x           = tbl.x;
y           = tbl.y;
z           = tbl.z;

% Small processing
t_plot = milliseconds(timestamp);
fps    = ( 1./(diff(timestamp)) ) .* 1000;

% Clear temporary variables
clear opts tbl



%% Figures

if Do.plotData 
    Plots; % call a second script
end


%% Data saving (.mat)

if Do.saveData
    save([cd '\Data-' RunID],...
        'Do',...
        'loggertimestamp', ...
        'timestamp',...
        'framenum',...
        'roll',...
        'pitch',...
        'yaw',...
        'x',...
        'y',...
        'z'); % TODO: create a separate folder
end


% END of file